
<style>

    .autocomplete {
        position: relative;
    }

        .autocomplete .options {
            position: absolute;
            top: 30px;
            left: 0;
            background: white;
            width: 100%;
            max-height: 10rem;
            overflow-y: scroll;
            padding: 0;
            z-index: 10;
            border: 1px solid #ced4da;
            border-radius: 5px;
            box-shadow: 0 30px 25px 8px rgba(0, 0, 0, 0.1);
        }

        .autocomplete .option {
            display: block;
            padding: 0.25rem;
        }

            .autocomplete .option .option-text {
                padding: 0.25rem 0.5rem;
            }

            .autocomplete .option:hover {
                background: #1E90FF;
                color: #fff;
            }

            .autocomplete .option.disabled {
                background-color: lightgrey;
                cursor: not-allowed;
            }

                .autocomplete .option.disabled:hover {
                    background: lightgrey;
                    color: var(--bs-body);
                }

    .form-control {
        display: block;
        width: 100%;
        padding: 0.2rem 0.2rem;
        font-size: 1rem;
        line-height: 1.25;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            color: #495057;
            background-color: #fff;
            border-color: #80bdff;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
</style>

<div class="autocomplete">
    
    <input type="text" @bind-value="@_value" @oninput="OnValueChanged" class="form-control" />

    <div style="height:24px;width:24px;position:absolute;top:3px;right:3px;" @onclick="ToggleButtonClick">
        <svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
            <path d="M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z" />
            <path d="M0-.75h24v24H0z" fill="none" />
        </svg>
    </div>

    @if (Values is not null)
    {
        <div class="options">
            <ul>

                @if (Values.Count == 0)
                {
                    <li class="disabled option">Нет данных</li>
                }
                else
                {
                    @foreach (string value in Values)
                    {
                        <li class="option" @onclick=@(async () => { await ConfirmInputValue(value); })>

                            <span class="option-text">@value</span>

                        </li>
                    }
                }

            </ul>
        </div>
    }

</div>