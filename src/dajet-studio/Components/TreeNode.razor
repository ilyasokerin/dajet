@inject IJSRuntime JSRuntime;
@inject IDialogService DialogService;

<li style="white-space:nowrap; margin: 0px; padding: 0px 0px 0px 15px; @(Model.IsVisible ? "display: block;" : "display: none;")">

    @if (Model.UseToggle)
    {
        <span style="display:inline; margin-right:3px; padding: 0px; cursor:pointer; user-select:none;" @onclick="ToggleClick">
            @(Model.IsExpanded ? "-" : "+")
        </span>
    }
    else
    {
        <span style="display:inline; margin-right:3px; padding: 0px; user-select:none;">&nbsp;&nbsp;</span>
    }

    @if (!string.IsNullOrEmpty(Model.Icon))
    {
        <img src="@Model.Icon" alt="" style="width:16px;height:16px;vertical-align:middle;" />
    }

    @if (Model.CanBeEdited && Model.IsInEditMode)
    {
        <div class="tree-node-container">
            
            <input type="text" class="tree-node-input" @ref="TitleInput"
               @bind-value="@Model.Title" @bind-value:event="oninput" @onkeyup="KeyPress" @onblur="LostFocus" />

            <MudTooltip Text="Отменить редактирование">
                <input type="button" value="✕" class="tree-node-cancel-button" @onclick="CancelEditMode">
            </MudTooltip>

        </div>
    }
    else
    {
        <span @ref="TreeNodeSpan" class="tree-node-span"
              style="@DropStyle" draggable="@(Model.IsDraggable ? "true" : "false")"
              @onclick="NodeClick" @onclick:preventDefault="true"
              @ondblclick="DoubleClick" @ondblclick:preventDefault="true"
              @oncontextmenu="OpenContextMenu" @oncontextmenu:preventDefault="true"
              ondragover="event.preventDefault();"
              @ondrop="DropHandler"
              @ondragstart="DragStartHandler"
              @ondragenter="DragEnterHandler"
              @ondragleave="DragLeaveHandler">
            @(Model == null ? string.Empty : Model.Title)
        </span>
    }

    @if (Model != null && Model.Nodes != null && Model.Nodes.Count > 0)
    {
        <ul style="@(Model.IsExpanded ? "display: block;" : "display: none;")">
            
            @foreach (TreeNodeModel model in Model.Nodes)
            {
                <TreeNode Model="model" />
            }

        </ul>
    }

</li>